// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

@mixin flex($direction: row, $wrap: nowrap, $justify: space-between) {
  display: flex;
  flex-direction: $direction;
  flex-wrap: $wrap;
  justify-content: $justify;
  align-items: center;
}

/// creates the selector for each color box used in .color-boxes
/// @author David Baxter
/// @param {String} $background-color
/// @param {String} $name
/// @param {String} $content-color
/// @param {String} $text-color
@mixin color-box($background-color, $name, $content-color: $text-color) {
  &.#{$name} {
    background-color: $background-color;
    position: relative;
    &:after {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: $content-color;
      content: "$" + $name + " " + $background-color;
    }
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

@mixin box-shadow($shadow-size) {
  box-shadow: $shadow-size;
  -moz-box-shadow: $shadow-size;
  -webkit-box-shadow: $shadow-size;
}

// Respond-To Mixin
@mixin breakpoint($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);

    @media screen and (min-width: $value) {
      @content;
    }
  }

  @warn "Unknown `#{$breakpoint}` in $breakpoints";
}



